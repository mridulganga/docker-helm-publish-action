name: 'Docker Helm Publish'
description: 'Build and Publish Docker image and helm chart to ECR'
inputs:
  aws-access-key-id:
    description: 'AWS Access Key'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true
    default: 'us-east-1'
  registry:
    description: 'ECR Registry'
    required: true
  dockerfile:
    description: 'Dockerfile name'
    required: true
    default: 'Dockerfile'
  docker-repo:
    description: 'ECR docker Repo (ex - docker-svc)'
    required: true
  docker-tag:
    description: 'Docker image tag'
    required: true
  helm-chart:
    description: 'Path to helm chart'
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure awscli v2
      shell: bash
      run: |
        aws configure set aws_access_key_id ${{ inputs.aws-access-key-id }}
        aws configure set aws_secret_access_key ${{ inputs.aws-secret-access-key }}
        aws configure set region ${{ inputs.aws-region }}
    
    - name: Install Helm
      shell: bash
      run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Docker Registry Login
      shell: bash
      run: aws ecr get-login-password --region ${{ inputs.aws-region }} | docker login --username AWS --password-stdin ${{ inputs.registry }}

    - name: Helm Registry Login
      shell: bash
      run: aws ecr get-login-password --region ${{ inputs.aws-region }} | helm registry login --username AWS --password-stdin ${{ inputs.registry }}

    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      env:
        ECR_REGISTRY: ${{ inputs.registry }}
        ECR_REPOSITORY: ${{ inputs.docker-repo }}
        IMAGE_TAG: ${{ inputs.docker-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f ${{ inputs.dockerfile }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: package helm chart
      shell: bash
      run: helm package ${{ inputs.helm-chart }}

    - name: push helm chart to ecr
      shell: bash
      run: helm push `find . -type f -name '*.tgz'`  oci://${{ inputs.registry }}
